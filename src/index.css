/* @import url("https://fonts.googleapis.com/css?family=Open+Sans|Raleway:300,400,500,600,700,800"); */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* overrides for desktop-first */
.container {
   max-width: 1280px;
}

@media (max-width: 1280px) {
   .container {
      max-width: 1024px;
   }
}

@media (max-width: 1024px) {
   .container {
      max-width: 768px;
   }
}

@media (max-width: 768px) {
   .container {
      max-width: 640px;
   }
}

.corrected-digit {
   /* https://www.reddit.com/r/graphic_design/comments/4l64zo/comment/d3l0rvl/?utm_source=share&utm_medium=web2x&context=3 */
   font-variant-numeric: lining-nums;
   -moz-font-feature-settings: "lnum" 1;
   -moz-font-feature-settings: "lnum=1";
   -ms-font-feature-settings: "lnum" 1;
   -o-font-feature-settings: "lnum" 1;
   -webkit-font-feature-settings: "lnum" 1;
   font-feature-settings: "lnum" 1;
}

/* theme */
.App {
   @apply text-gray-dark text-sm flex flex-col min-h-screen corrected-digit;
}
p {
   @apply text-sm;
}

button {
   @apply text-left focus:outline-none;
}
label {
   @apply text-gray-dark text-sm;
}
.leaflet-container {
   height: 100%;
   width: 100%;
}

/* footer & header */
.nav-logo {
   position: absolute;
   top: 1px;
   left: 0px;
}

.site-header {
   height: 4.375rem; /* 70px */
}

.overlay {
   @apply h-full fixed z-50 left-0 top-0 bg-white overflow-x-hidden;
   width: 0;
   transition: width 0.2s ease-out;
}

.site-footer h4 {
   @apply text-lg mb-3 md:mb-1;
}

.site-footer li {
   @apply my-1 md:inline-block;
}

.site-footer .separator {
   @apply hidden md:inline text-lg;
}

.separator::after {
   content: "|";
   @apply mx-2;
}

.shadow {
   box-shadow: rgba(99, 99, 99, 0.2) 0px 0px 8px 0px;
}
.shadow-sm {
   box-shadow: rgba(99, 99, 99, 0.2) 0px 0px 4px 0px;
}

.shadow-bottom {
   box-shadow: rgba(99, 99, 99, 0.2) 0px 8px 8px -8px;
}

.shadow-b-r {
   box-shadow: rgba(99, 99, 99, 0.2) 8px 8px 8px -8px;
}

.hover-shadow,
.focus-shadow {
   transition: box-shadow 0.2s linear;
}

.hover-shadow:hover,
.hover-shadow:focus,
.focus-shadow:focus,
.shadow-blue {
   box-shadow: rgba(0, 151, 167, 1) 0px 0px 6px 0px;
}

.row {
   @apply grid grid-cols-12 gap-6;
}

h1 {
   @apply font-normal text-gray-dark text-4xl mb-14 md:mb-8;
}

h2 {
   @apply font-normal text-blue text-xl mb-2;
}
h3 {
   @apply font-bold text-gray-dark text-sm mb-2 uppercase;
}
h4 {
   @apply font-normal text-gray-dark text-base;
}

a,
.btn-like-a {
   @apply text-blue-light font-medium tracking-wide hover:text-blue hover:underline;
}
.btn-gray-dark {
   @apply py-1 px-8 text-xs inline-block tracking-wide bg-gray-dark text-orange rounded-md hover:no-underline hover:text-orange;
}

.btn-blue {
   @apply tracking-wide bg-blue-light text-white rounded-md hover:bg-blue hover:text-white hover:no-underline;
}

.btn-orange {
   @apply bg-orange text-white rounded-md hover:bg-orange-dark hover:text-white hover:no-underline;
}

.btn-md-orange {
   @apply btn-orange py-2 px-4 font-medium leading-normal tracking-wide;
}

.btn-xl-orange {
   @apply btn-xl btn-orange;
}
/* 
.btn-red {
   @apply py-1 px-8 text-xs inline-block tracking-wide bg-red text-white rounded-md hover:bg-red hover:text-white hover:no-underline;
} */

.btn-xl {
   @apply py-3 w-full flex justify-center font-medium leading-normal tracking-wide;
}

.btn-sm-blue {
   @apply btn-blue py-1 px-8 text-xs inline-block;
}

.btn-md-blue {
   @apply btn-blue text-sm py-2 px-4 font-medium leading-normal tracking-wide;
}

.btn-lg-blue {
   @apply btn-blue text-sm py-2 px-8 font-medium leading-normal tracking-wide;
}

.btn-lg-orange {
   @apply btn-orange text-sm py-2 px-8 font-medium leading-normal tracking-wide;
}

.btn-xl-blue {
   @apply btn-xl btn-blue;
}
.btn-xl-blue:disabled,
.btn-lg-blue:disabled,
.btn-blue:disabled {
   @apply bg-gray cursor-not-allowed;
}

.btn-dark {
   @apply text-gray hover:no-underline hover:text-gray-dark;
}

.btn-menu {
   @apply btn-dark text-base font-normal;
}
.btn-menu.strong {
   @apply text-gray-dark font-bold;
}
.btn-menu-mobile {
   @apply text-gray-dark hover:text-gray-dark text-2xl font-normal;
}

.btn-user-menu-base {
   @apply border-l-4 py-3 px-4 w-full hover:no-underline hover:border-blue border-white;
}
.btn-user-menu {
   @apply btn-user-menu-base inline-block text-gray-dark  hover:text-blue;
}

.react-select-inline {
   @apply inline-block  text-gray-dark;
}
.react-select-inline .react-select__control {
   @apply border-none cursor-pointer min-h-0 !important;
}
.react-select-inline .react-select__value-container {
   @apply w-32 pl-2 !important;
}

.react-select-inline .react-select__single-value {
   @apply text-blue-light font-medium  hover:text-blue hover:underline !important;
}

.react-select-container {
   @apply border shadow-sm border-gray;
}
.react-select__control {
   @apply border-none rounded-none h-10 !important;
}
.react-select__control--is-focused {
   box-shadow: none !important;
}

.react-select__indicator-separator {
   @apply hidden;
}
.react-select__value-container {
   @apply py-0 px-0 pl-4 !important;
}
.react-select__single-value {
   @apply text-gray-dark !important;
}
.react-select__menu {
   @apply shadow !important;
}
.react-select__option {
   @apply border-l-4 border-white cursor-pointer hover:bg-white !important;
}

.react-select__option--is-selected {
   @apply bg-white text-gray-dark !important;
}
.react-select__option--is-focused {
   @apply bg-white border-blue-light text-blue-light font-semibold  !important;
}

input[type="checkbox"],
input[type="radio"] {
   --active: #0097a7;
   --active-inner: #fff;
   --focus: 1px #00838f;
   --border: #e0e0e0;
   --border-hover: #00838f;
   --background: #fff;
   --disabled: #9e9e9e;
   --disabled-inner: #9e9e9e;
   -webkit-appearance: none;
   -moz-appearance: none;
   height: 16px;
   outline: none;
   display: inline-block;
   vertical-align: top;
   position: relative;
   margin: 0 2px;
   cursor: pointer;
   border: 1px solid var(--bc, var(--border));
   background: var(--b, var(--background));
   transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
}
input[type="checkbox"]:after,
input[type="radio"]:after {
   content: "";
   display: block;
   left: 0;
   top: 0;
   position: absolute;
   transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
}
input[type="checkbox"]:checked,
input[type="radio"]:checked {
   --b: var(--active);
   --bc: var(--active);
   --d-o: 0.3s;
   --d-t: 0.6s;
   --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
}
input[type="checkbox"]:disabled,
input[type="radio"]:disabled {
   --b: var(--disabled);
   cursor: not-allowed;
   opacity: 0.9;
}
input[type="checkbox"]:disabled:checked,
input[type="radio"]:disabled:checked {
   --b: var(--disabled-inner);
   --bc: var(--border);
}
input[type="checkbox"]:disabled + label,
input[type="radio"]:disabled + label {
   cursor: not-allowed;
}
input[type="checkbox"]:hover:not(:checked):not(:disabled),
input[type="radio"]:hover:not(:checked):not(:disabled) {
   --bc: var(--border-hover);
}
input[type="checkbox"]:focus,
input[type="radio"]:focus {
   box-shadow: 0 0 0 var(--focus);
}
input[type="checkbox"]:not(.switch),
input[type="radio"]:not(.switch) {
   width: 16px;
}
input[type="checkbox"]:not(.switch):after,
input[type="radio"]:not(.switch):after {
   opacity: var(--o, 0);
}
input[type="checkbox"]:not(.switch):checked,
input[type="radio"]:not(.switch):checked {
   --o: 1;
}
input[type="checkbox"] + label,
input[type="radio"] + label {
   font-size: 14px;
   line-height: 21px;
   display: inline-block;
   vertical-align: top;
   cursor: pointer;
   margin-left: 4px;
}
input[type="checkbox"]:not(.switch) {
   border-radius: 5px;
}
input[type="checkbox"]:not(.switch):after {
   width: 5px;
   height: 9px;
   border: 2px solid var(--active-inner);
   border-top: 0;
   border-left: 0;
   left: 4px;
   top: 2px;
   transform: rotate(var(--r, 20deg));
}
input[type="checkbox"]:not(.switch):checked {
   --r: 43deg;
}
input[type="checkbox"].switch,
input[type="radio"].switch {
   width: 38px;
   border-radius: 11px;
}
input[type="checkbox"].switch:after,
input[type="radio"].switch:after {
   left: 2px;
   top: 2px;
   border-radius: 50%;
   width: 15px;
   height: 15px;
   background: var(--ab, var(--border));
   transform: translateX(var(--x, 0));
}
input[type="checkbox"].switch:checked,
input[type="radio"].switch:checked {
   --ab: var(--active-inner);
   --x: 17px;
}
input[type="checkbox"].switch:disabled:not(:checked):after,
input[type="radio"].switch:disabled:not(:checked):after {
   opacity: 0.6;
}
input[type="radio"] {
   border-radius: 50%;
}
input[type="radio"]:after {
   width: 19px;
   height: 19px;
   border-radius: 50%;
   background: var(--active-inner);
   opacity: 0;
   transform: scale(var(--s, 0.7));
}
input[type="radio"]:checked {
   --s: 0.5;
}

input[type="text"],
input[type="password"] {
   @apply bg-white text-gray-dark h-10 text-sm px-4 py-2 border-gray border shadow-sm focus:outline-none;
}
.input-normal {
   @apply w-52;
}

.cursor-default-important {
   cursor: default !important;
}

textarea {
   @apply bg-white text-sm px-4 py-2 border-gray border shadow-sm focus:outline-none tracking-wider;
}

.overlay-popup {
   @apply shadow z-50 bg-white absolute;
}

/* animations */
.flash-enter {
   opacity: 0.01;
}

.flash-enter-active {
   opacity: 1;
   transition: opacity 500ms ease-in;
}

.overlay-anim-enter {
   opacity: 0;
   transform: scale(0.9);
}

.overlay-anim-enter-active {
   opacity: 1;
   transform: translateX(0);
   transition: opacity 300ms, transform 300ms;
}

.overlay-anim-exit {
   opacity: 1;
}
.overlay-anim-exit-active {
   opacity: 0;
   transform: scale(0.9);
   transition: opacity 300ms, transform 300ms;
}
